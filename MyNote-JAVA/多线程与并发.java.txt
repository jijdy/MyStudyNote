1，进程与线程：
	进程：是代码在数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位。
	线程：是进程的一个执行路径，一个进程至少有一个线程，进程中的多个线程共享进程的资源
			虽然资源被分配给进程，但是cpu被分配给了线程，线程是cpu分配的基本单位。
	关系：一个进程有多个线程，多个线程共享进程的堆和方法区，但都有自己独立的pc计数器和栈区域

2,synchronized和volatile:
	
	
3，一个线程的状态：
	1）新建状态(New)：Thread thread = new Thread();创建未启动
		此时主要是完成对线程的属性的设置，
	2）可运行状态(Runable):
		在.strat方法之后进入，被线程调度器选中则开始运行，运行时使用yieId则再次等待
		在等待或者正常工作中，
		//此时可以再分出一个Runing状态以表示正在运行，不过源码中并没有这个状态
	3）阻塞状态(BLOCKED)：
		等待阻塞：通过调用线程的wait()方法，让线程等待某个工作的完成
		同步阻塞：线程在获取synchronized同步锁失败(被其他线程占用),就会进入同步阻塞
		其他阻塞：通过调用线程的sleep()或join()或发出了i/o请求时，会进入阻塞。当sleep()超时，
			join()等待线程终止或者超时，或i/o处理完毕时，线程程序进入可运行状态
		在io操作完成并获得锁后进入Runable状态
	4）等待状态(WAITING)：
		通过调用对象的wait方法，从Runable状态进入等待状态，调用notify() 方法进入可运行状态
		调用join() 也会进入等待直到加入的线程执行完成再进入可运行
	5）TIMED_WAITING: 
		调用sleep(long) wait(long)后，直到时间超时就会再次进入可运行状态
	6）TERMINATED:
		线程的run方法运行结束，线程终止